#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_BOOKS 100
#define MAX_TITLE_LENGTH 100
#define MAX_NAME_LENGTH 100

typedef struct {
    int id;
    char title[MAX_TITLE_LENGTH];
    char author[MAX_NAME_LENGTH];
    int is_borrowed;
    char borrower[MAX_NAME_LENGTH];
    char return_date[MAX_NAME_LENGTH];
} Book;

Book library[MAX_BOOKS];
int book_count = 0;

void add_book() {
    if (book_count >= MAX_BOOKS) {
        printf("Library is full! Cannot add more books.\n");
        return;
    }

    Book new_book;
    new_book.id = book_count + 1;

    printf("Enter book title: ");
    getchar(); // To consume the newline character left by previous input
    fgets(new_book.title, MAX_TITLE_LENGTH, stdin);
    new_book.title[strcspn(new_book.title, "\n")] = '\0'; // Remove newline

    printf("Enter book author: ");
    fgets(new_book.author, MAX_NAME_LENGTH, stdin);
    new_book.author[strcspn(new_book.author, "\n")] = '\0'; // Remove newline

    new_book.is_borrowed = 0; // Initially not borrowed
    strcpy(new_book.borrower, "");
    strcpy(new_book.return_date, "");

    library[book_count] = new_book;
    book_count++;

    printf("Book added successfully!\n");
}

void borrow_book() {
    int book_id;
    printf("Enter the book ID to borrow: ");
    scanf("%d", &book_id);

    if (book_id < 1 || book_id > book_count) {
        printf("Invalid book ID!\n");
        return;
    }

    Book *book = &library[book_id - 1];

    if (book->is_borrowed) {
        printf("This book is already borrowed by %s.\n", book->borrower);
        return;
    }

    printf("Enter borrower's name: ");
    getchar(); // To consume the newline character left by previous input
    fgets(book->borrower, MAX_NAME_LENGTH, stdin);
    book->borrower[strcspn(book->borrower, "\n")] = '\0'; // Remove newline

    printf("Enter return date (DD/MM/YYYY): ");
    fgets(book->return_date, MAX_NAME_LENGTH, stdin);
    book->return_date[strcspn(book->return_date, "\n")] = '\0'; // Remove newline

    book->is_borrowed = 1;
    printf("Book borrowed successfully!\n");
}

void return_book() {
    int book_id;
    printf("Enter the book ID to return: ");
    scanf("%d", &book_id);

    if (book_id < 1 || book_id > book_count) {
        printf("Invalid book ID!\n");
        return;
    }

    Book *book = &library[book_id - 1];

    if (!book->is_borrowed) {
        printf("This book is not borrowed!\n");
        return;
    }

    book->is_borrowed = 0;
    strcpy(book->borrower, "");
    strcpy(book->return_date, "");
    printf("Book returned successfully!\n");
}

void display_books() {
    if (book_count == 0) {
        printf("No books in the library!\n");
        return;
    }

    printf("\nLibrary Book List:\n");
    printf("ID\tTitle\t\tAuthor\t\tBorrowed\tBorrower\tReturn Date\n");
    printf("-------------------------------------------------------------------------\n");
    for (int i = 0; i < book_count; i++) {
        Book book = library[i];
        printf("%d\t%s\t\t%s\t\t%s\t\t%s\t\t%s\n",
               book.id,
               book.title,
               book.author,
               book.is_borrowed ? "Yes" : "No",
               book.is_borrowed ? book.borrower : "-",
               book.is_borrowed ? book.return_date : "-");
    }
}

int main() {
    int choice;

    while (1) {
        printf("\nLibrary Management System\n");
        printf("1. Add Book\n");
        printf("2. Borrow Book\n");
        printf("3. Return Book\n");
        printf("4. Display All Books\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                add_book();
                break;
            case 2:
                borrow_book();
                break;
            case 3:
                return_book();
                break;
            case 4:
                display_books();
                break;
            case 5:
                printf("Exiting the system. Goodbye!\n");
                exit(0);
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }

    return 0;
}
